---
description:
globs:
alwaysApply: true
---
# Follow Existing Patterns

When implementing new features or modifying existing ones, always follow the patterns established in similar files within the codebase.

## Consistency Guidelines

1. **Look at similar components first** - Before implementing a new feature, examine how similar functionality is implemented elsewhere in the codebase

2. **Variable naming** - Use the same variable naming patterns as existing code for similar concepts (e.g., environment variables, configuration options)

3. **Function structure** - Follow the patterns used in similar functions within the project

4. **GraphQL organization** - All GraphQL operations must be defined in separate files in the `graphql/` directory, never inline in job files or other components

## Examples of Pattern Matching

When working with specific functionality, look at these example implementations:

- For **Google Sheets integration**, refer to [jobs/order-to-google-sheets/job.js](mdc:jobs/order-to-google-sheets/job.js) for environment variable naming and API usage patterns

- For **webhook handling**, follow patterns in [utils/webhook-handlers.js](mdc:utils/webhook-handlers.js)

- For **GraphQL operations**, observe how queries and mutations are defined in separate files in the [graphql](mdc:graphql) directory and imported where needed

Remember to preserve the existing style, casing, and structure when adding new code to maintain consistency throughout the codebase.
